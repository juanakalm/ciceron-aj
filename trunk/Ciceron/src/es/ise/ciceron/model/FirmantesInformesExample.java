package es.ise.ciceron.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class FirmantesInformesExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table AJ_FIRMANTES_INFORMES_V
     *
     * @mbggenerated Mon Aug 08 10:45:32 CEST 2011
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table AJ_FIRMANTES_INFORMES_V
     *
     * @mbggenerated Mon Aug 08 10:45:32 CEST 2011
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table AJ_FIRMANTES_INFORMES_V
     *
     * @mbggenerated Mon Aug 08 10:45:32 CEST 2011
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AJ_FIRMANTES_INFORMES_V
     *
     * @mbggenerated Mon Aug 08 10:45:32 CEST 2011
     */
    public FirmantesInformesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AJ_FIRMANTES_INFORMES_V
     *
     * @mbggenerated Mon Aug 08 10:45:32 CEST 2011
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AJ_FIRMANTES_INFORMES_V
     *
     * @mbggenerated Mon Aug 08 10:45:32 CEST 2011
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AJ_FIRMANTES_INFORMES_V
     *
     * @mbggenerated Mon Aug 08 10:45:32 CEST 2011
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AJ_FIRMANTES_INFORMES_V
     *
     * @mbggenerated Mon Aug 08 10:45:32 CEST 2011
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AJ_FIRMANTES_INFORMES_V
     *
     * @mbggenerated Mon Aug 08 10:45:32 CEST 2011
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AJ_FIRMANTES_INFORMES_V
     *
     * @mbggenerated Mon Aug 08 10:45:32 CEST 2011
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AJ_FIRMANTES_INFORMES_V
     *
     * @mbggenerated Mon Aug 08 10:45:32 CEST 2011
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AJ_FIRMANTES_INFORMES_V
     *
     * @mbggenerated Mon Aug 08 10:45:32 CEST 2011
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AJ_FIRMANTES_INFORMES_V
     *
     * @mbggenerated Mon Aug 08 10:45:32 CEST 2011
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AJ_FIRMANTES_INFORMES_V
     *
     * @mbggenerated Mon Aug 08 10:45:32 CEST 2011
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table AJ_FIRMANTES_INFORMES_V
     *
     * @mbggenerated Mon Aug 08 10:45:32 CEST 2011
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdUnidadContracionIsNull() {
            addCriterion("ID_UNIDAD_CONTRACION is null");
            return (Criteria) this;
        }

        public Criteria andIdUnidadContracionIsNotNull() {
            addCriterion("ID_UNIDAD_CONTRACION is not null");
            return (Criteria) this;
        }

        public Criteria andIdUnidadContracionEqualTo(BigDecimal value) {
            addCriterion("ID_UNIDAD_CONTRACION =", value, "idUnidadContracion");
            return (Criteria) this;
        }

        public Criteria andIdUnidadContracionNotEqualTo(BigDecimal value) {
            addCriterion("ID_UNIDAD_CONTRACION <>", value, "idUnidadContracion");
            return (Criteria) this;
        }

        public Criteria andIdUnidadContracionGreaterThan(BigDecimal value) {
            addCriterion("ID_UNIDAD_CONTRACION >", value, "idUnidadContracion");
            return (Criteria) this;
        }

        public Criteria andIdUnidadContracionGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("ID_UNIDAD_CONTRACION >=", value, "idUnidadContracion");
            return (Criteria) this;
        }

        public Criteria andIdUnidadContracionLessThan(BigDecimal value) {
            addCriterion("ID_UNIDAD_CONTRACION <", value, "idUnidadContracion");
            return (Criteria) this;
        }

        public Criteria andIdUnidadContracionLessThanOrEqualTo(BigDecimal value) {
            addCriterion("ID_UNIDAD_CONTRACION <=", value, "idUnidadContracion");
            return (Criteria) this;
        }

        public Criteria andIdUnidadContracionIn(List<BigDecimal> values) {
            addCriterion("ID_UNIDAD_CONTRACION in", values, "idUnidadContracion");
            return (Criteria) this;
        }

        public Criteria andIdUnidadContracionNotIn(List<BigDecimal> values) {
            addCriterion("ID_UNIDAD_CONTRACION not in", values, "idUnidadContracion");
            return (Criteria) this;
        }

        public Criteria andIdUnidadContracionBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ID_UNIDAD_CONTRACION between", value1, value2, "idUnidadContracion");
            return (Criteria) this;
        }

        public Criteria andIdUnidadContracionNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ID_UNIDAD_CONTRACION not between", value1, value2, "idUnidadContracion");
            return (Criteria) this;
        }

        public Criteria andNombreIsNull() {
            addCriterion("NOMBRE is null");
            return (Criteria) this;
        }

        public Criteria andNombreIsNotNull() {
            addCriterion("NOMBRE is not null");
            return (Criteria) this;
        }

        public Criteria andNombreEqualTo(String value) {
            addCriterion("NOMBRE =", value, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreNotEqualTo(String value) {
            addCriterion("NOMBRE <>", value, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreGreaterThan(String value) {
            addCriterion("NOMBRE >", value, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreGreaterThanOrEqualTo(String value) {
            addCriterion("NOMBRE >=", value, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreLessThan(String value) {
            addCriterion("NOMBRE <", value, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreLessThanOrEqualTo(String value) {
            addCriterion("NOMBRE <=", value, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreLike(String value) {
            addCriterion("NOMBRE like", value, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreNotLike(String value) {
            addCriterion("NOMBRE not like", value, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreIn(List<String> values) {
            addCriterion("NOMBRE in", values, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreNotIn(List<String> values) {
            addCriterion("NOMBRE not in", values, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreBetween(String value1, String value2) {
            addCriterion("NOMBRE between", value1, value2, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreNotBetween(String value1, String value2) {
            addCriterion("NOMBRE not between", value1, value2, "nombre");
            return (Criteria) this;
        }

        public Criteria andDniIsNull() {
            addCriterion("DNI is null");
            return (Criteria) this;
        }

        public Criteria andDniIsNotNull() {
            addCriterion("DNI is not null");
            return (Criteria) this;
        }

        public Criteria andDniEqualTo(String value) {
            addCriterion("DNI =", value, "dni");
            return (Criteria) this;
        }

        public Criteria andDniNotEqualTo(String value) {
            addCriterion("DNI <>", value, "dni");
            return (Criteria) this;
        }

        public Criteria andDniGreaterThan(String value) {
            addCriterion("DNI >", value, "dni");
            return (Criteria) this;
        }

        public Criteria andDniGreaterThanOrEqualTo(String value) {
            addCriterion("DNI >=", value, "dni");
            return (Criteria) this;
        }

        public Criteria andDniLessThan(String value) {
            addCriterion("DNI <", value, "dni");
            return (Criteria) this;
        }

        public Criteria andDniLessThanOrEqualTo(String value) {
            addCriterion("DNI <=", value, "dni");
            return (Criteria) this;
        }

        public Criteria andDniLike(String value) {
            addCriterion("DNI like", value, "dni");
            return (Criteria) this;
        }

        public Criteria andDniNotLike(String value) {
            addCriterion("DNI not like", value, "dni");
            return (Criteria) this;
        }

        public Criteria andDniIn(List<String> values) {
            addCriterion("DNI in", values, "dni");
            return (Criteria) this;
        }

        public Criteria andDniNotIn(List<String> values) {
            addCriterion("DNI not in", values, "dni");
            return (Criteria) this;
        }

        public Criteria andDniBetween(String value1, String value2) {
            addCriterion("DNI between", value1, value2, "dni");
            return (Criteria) this;
        }

        public Criteria andDniNotBetween(String value1, String value2) {
            addCriterion("DNI not between", value1, value2, "dni");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table AJ_FIRMANTES_INFORMES_V
     *
     * @mbggenerated do_not_delete_during_merge Mon Aug 08 10:45:32 CEST 2011
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table AJ_FIRMANTES_INFORMES_V
     *
     * @mbggenerated Mon Aug 08 10:45:32 CEST 2011
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}