package es.ise.ciceron.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class DescripcionesExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table DESCRIPCIONES
     *
     * @mbggenerated Wed Aug 24 13:51:43 CEST 2011
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table DESCRIPCIONES
     *
     * @mbggenerated Wed Aug 24 13:51:43 CEST 2011
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table DESCRIPCIONES
     *
     * @mbggenerated Wed Aug 24 13:51:43 CEST 2011
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DESCRIPCIONES
     *
     * @mbggenerated Wed Aug 24 13:51:43 CEST 2011
     */
    public DescripcionesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DESCRIPCIONES
     *
     * @mbggenerated Wed Aug 24 13:51:43 CEST 2011
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DESCRIPCIONES
     *
     * @mbggenerated Wed Aug 24 13:51:43 CEST 2011
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DESCRIPCIONES
     *
     * @mbggenerated Wed Aug 24 13:51:43 CEST 2011
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DESCRIPCIONES
     *
     * @mbggenerated Wed Aug 24 13:51:43 CEST 2011
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DESCRIPCIONES
     *
     * @mbggenerated Wed Aug 24 13:51:43 CEST 2011
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DESCRIPCIONES
     *
     * @mbggenerated Wed Aug 24 13:51:43 CEST 2011
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DESCRIPCIONES
     *
     * @mbggenerated Wed Aug 24 13:51:43 CEST 2011
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DESCRIPCIONES
     *
     * @mbggenerated Wed Aug 24 13:51:43 CEST 2011
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DESCRIPCIONES
     *
     * @mbggenerated Wed Aug 24 13:51:43 CEST 2011
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DESCRIPCIONES
     *
     * @mbggenerated Wed Aug 24 13:51:43 CEST 2011
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table DESCRIPCIONES
     *
     * @mbggenerated Wed Aug 24 13:51:43 CEST 2011
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdDescripcionIsNull() {
            addCriterion("D_ID is null");
            return (Criteria) this;
        }

        public Criteria andIdDescripcionIsNotNull() {
            addCriterion("D_ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdDescripcionEqualTo(BigDecimal value) {
            addCriterion("D_ID =", value, "idDescripcion");
            return (Criteria) this;
        }

        public Criteria andIdDescripcionNotEqualTo(BigDecimal value) {
            addCriterion("D_ID <>", value, "idDescripcion");
            return (Criteria) this;
        }

        public Criteria andIdDescripcionGreaterThan(BigDecimal value) {
            addCriterion("D_ID >", value, "idDescripcion");
            return (Criteria) this;
        }

        public Criteria andIdDescripcionGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("D_ID >=", value, "idDescripcion");
            return (Criteria) this;
        }

        public Criteria andIdDescripcionLessThan(BigDecimal value) {
            addCriterion("D_ID <", value, "idDescripcion");
            return (Criteria) this;
        }

        public Criteria andIdDescripcionLessThanOrEqualTo(BigDecimal value) {
            addCriterion("D_ID <=", value, "idDescripcion");
            return (Criteria) this;
        }

        public Criteria andIdDescripcionIn(List<BigDecimal> values) {
            addCriterion("D_ID in", values, "idDescripcion");
            return (Criteria) this;
        }

        public Criteria andIdDescripcionNotIn(List<BigDecimal> values) {
            addCriterion("D_ID not in", values, "idDescripcion");
            return (Criteria) this;
        }

        public Criteria andIdDescripcionBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("D_ID between", value1, value2, "idDescripcion");
            return (Criteria) this;
        }

        public Criteria andIdDescripcionNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("D_ID not between", value1, value2, "idDescripcion");
            return (Criteria) this;
        }

        public Criteria andUActuIsNull() {
            addCriterion("D_U_ACTU is null");
            return (Criteria) this;
        }

        public Criteria andUActuIsNotNull() {
            addCriterion("D_U_ACTU is not null");
            return (Criteria) this;
        }

        public Criteria andUActuEqualTo(String value) {
            addCriterion("D_U_ACTU =", value, "uActu");
            return (Criteria) this;
        }

        public Criteria andUActuNotEqualTo(String value) {
            addCriterion("D_U_ACTU <>", value, "uActu");
            return (Criteria) this;
        }

        public Criteria andUActuGreaterThan(String value) {
            addCriterion("D_U_ACTU >", value, "uActu");
            return (Criteria) this;
        }

        public Criteria andUActuGreaterThanOrEqualTo(String value) {
            addCriterion("D_U_ACTU >=", value, "uActu");
            return (Criteria) this;
        }

        public Criteria andUActuLessThan(String value) {
            addCriterion("D_U_ACTU <", value, "uActu");
            return (Criteria) this;
        }

        public Criteria andUActuLessThanOrEqualTo(String value) {
            addCriterion("D_U_ACTU <=", value, "uActu");
            return (Criteria) this;
        }

        public Criteria andUActuLike(String value) {
            addCriterion("D_U_ACTU like", value, "uActu");
            return (Criteria) this;
        }

        public Criteria andUActuNotLike(String value) {
            addCriterion("D_U_ACTU not like", value, "uActu");
            return (Criteria) this;
        }

        public Criteria andUActuIn(List<String> values) {
            addCriterion("D_U_ACTU in", values, "uActu");
            return (Criteria) this;
        }

        public Criteria andUActuNotIn(List<String> values) {
            addCriterion("D_U_ACTU not in", values, "uActu");
            return (Criteria) this;
        }

        public Criteria andUActuBetween(String value1, String value2) {
            addCriterion("D_U_ACTU between", value1, value2, "uActu");
            return (Criteria) this;
        }

        public Criteria andUActuNotBetween(String value1, String value2) {
            addCriterion("D_U_ACTU not between", value1, value2, "uActu");
            return (Criteria) this;
        }

        public Criteria andFActuIsNull() {
            addCriterion("D_F_ACTU is null");
            return (Criteria) this;
        }

        public Criteria andFActuIsNotNull() {
            addCriterion("D_F_ACTU is not null");
            return (Criteria) this;
        }

        public Criteria andFActuEqualTo(Date value) {
            addCriterionForJDBCDate("D_F_ACTU =", value, "fActu");
            return (Criteria) this;
        }

        public Criteria andFActuNotEqualTo(Date value) {
            addCriterionForJDBCDate("D_F_ACTU <>", value, "fActu");
            return (Criteria) this;
        }

        public Criteria andFActuGreaterThan(Date value) {
            addCriterionForJDBCDate("D_F_ACTU >", value, "fActu");
            return (Criteria) this;
        }

        public Criteria andFActuGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("D_F_ACTU >=", value, "fActu");
            return (Criteria) this;
        }

        public Criteria andFActuLessThan(Date value) {
            addCriterionForJDBCDate("D_F_ACTU <", value, "fActu");
            return (Criteria) this;
        }

        public Criteria andFActuLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("D_F_ACTU <=", value, "fActu");
            return (Criteria) this;
        }

        public Criteria andFActuIn(List<Date> values) {
            addCriterionForJDBCDate("D_F_ACTU in", values, "fActu");
            return (Criteria) this;
        }

        public Criteria andFActuNotIn(List<Date> values) {
            addCriterionForJDBCDate("D_F_ACTU not in", values, "fActu");
            return (Criteria) this;
        }

        public Criteria andFActuBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("D_F_ACTU between", value1, value2, "fActu");
            return (Criteria) this;
        }

        public Criteria andFActuNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("D_F_ACTU not between", value1, value2, "fActu");
            return (Criteria) this;
        }

        public Criteria andIdIsNull() {
            addCriterion("D_EXP_ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("D_EXP_ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(BigDecimal value) {
            addCriterion("D_EXP_ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(BigDecimal value) {
            addCriterion("D_EXP_ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(BigDecimal value) {
            addCriterion("D_EXP_ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("D_EXP_ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(BigDecimal value) {
            addCriterion("D_EXP_ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("D_EXP_ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<BigDecimal> values) {
            addCriterion("D_EXP_ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<BigDecimal> values) {
            addCriterion("D_EXP_ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("D_EXP_ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("D_EXP_ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andComentarioAjIsNull() {
            addCriterion("D_COMENTARIO_AJ is null");
            return (Criteria) this;
        }

        public Criteria andComentarioAjIsNotNull() {
            addCriterion("D_COMENTARIO_AJ is not null");
            return (Criteria) this;
        }

        public Criteria andComentarioAjEqualTo(String value) {
            addCriterion("D_COMENTARIO_AJ =", value, "comentarioAj");
            return (Criteria) this;
        }

        public Criteria andComentarioAjNotEqualTo(String value) {
            addCriterion("D_COMENTARIO_AJ <>", value, "comentarioAj");
            return (Criteria) this;
        }

        public Criteria andComentarioAjGreaterThan(String value) {
            addCriterion("D_COMENTARIO_AJ >", value, "comentarioAj");
            return (Criteria) this;
        }

        public Criteria andComentarioAjGreaterThanOrEqualTo(String value) {
            addCriterion("D_COMENTARIO_AJ >=", value, "comentarioAj");
            return (Criteria) this;
        }

        public Criteria andComentarioAjLessThan(String value) {
            addCriterion("D_COMENTARIO_AJ <", value, "comentarioAj");
            return (Criteria) this;
        }

        public Criteria andComentarioAjLessThanOrEqualTo(String value) {
            addCriterion("D_COMENTARIO_AJ <=", value, "comentarioAj");
            return (Criteria) this;
        }

        public Criteria andComentarioAjLike(String value) {
            addCriterion("D_COMENTARIO_AJ like", value, "comentarioAj");
            return (Criteria) this;
        }

        public Criteria andComentarioAjNotLike(String value) {
            addCriterion("D_COMENTARIO_AJ not like", value, "comentarioAj");
            return (Criteria) this;
        }

        public Criteria andComentarioAjIn(List<String> values) {
            addCriterion("D_COMENTARIO_AJ in", values, "comentarioAj");
            return (Criteria) this;
        }

        public Criteria andComentarioAjNotIn(List<String> values) {
            addCriterion("D_COMENTARIO_AJ not in", values, "comentarioAj");
            return (Criteria) this;
        }

        public Criteria andComentarioAjBetween(String value1, String value2) {
            addCriterion("D_COMENTARIO_AJ between", value1, value2, "comentarioAj");
            return (Criteria) this;
        }

        public Criteria andComentarioAjNotBetween(String value1, String value2) {
            addCriterion("D_COMENTARIO_AJ not between", value1, value2, "comentarioAj");
            return (Criteria) this;
        }

        public Criteria andRespuestaAjIsNull() {
            addCriterion("D_RESPUESTA_AJ is null");
            return (Criteria) this;
        }

        public Criteria andRespuestaAjIsNotNull() {
            addCriterion("D_RESPUESTA_AJ is not null");
            return (Criteria) this;
        }

        public Criteria andRespuestaAjEqualTo(String value) {
            addCriterion("D_RESPUESTA_AJ =", value, "respuestaAj");
            return (Criteria) this;
        }

        public Criteria andRespuestaAjNotEqualTo(String value) {
            addCriterion("D_RESPUESTA_AJ <>", value, "respuestaAj");
            return (Criteria) this;
        }

        public Criteria andRespuestaAjGreaterThan(String value) {
            addCriterion("D_RESPUESTA_AJ >", value, "respuestaAj");
            return (Criteria) this;
        }

        public Criteria andRespuestaAjGreaterThanOrEqualTo(String value) {
            addCriterion("D_RESPUESTA_AJ >=", value, "respuestaAj");
            return (Criteria) this;
        }

        public Criteria andRespuestaAjLessThan(String value) {
            addCriterion("D_RESPUESTA_AJ <", value, "respuestaAj");
            return (Criteria) this;
        }

        public Criteria andRespuestaAjLessThanOrEqualTo(String value) {
            addCriterion("D_RESPUESTA_AJ <=", value, "respuestaAj");
            return (Criteria) this;
        }

        public Criteria andRespuestaAjLike(String value) {
            addCriterion("D_RESPUESTA_AJ like", value, "respuestaAj");
            return (Criteria) this;
        }

        public Criteria andRespuestaAjNotLike(String value) {
            addCriterion("D_RESPUESTA_AJ not like", value, "respuestaAj");
            return (Criteria) this;
        }

        public Criteria andRespuestaAjIn(List<String> values) {
            addCriterion("D_RESPUESTA_AJ in", values, "respuestaAj");
            return (Criteria) this;
        }

        public Criteria andRespuestaAjNotIn(List<String> values) {
            addCriterion("D_RESPUESTA_AJ not in", values, "respuestaAj");
            return (Criteria) this;
        }

        public Criteria andRespuestaAjBetween(String value1, String value2) {
            addCriterion("D_RESPUESTA_AJ between", value1, value2, "respuestaAj");
            return (Criteria) this;
        }

        public Criteria andRespuestaAjNotBetween(String value1, String value2) {
            addCriterion("D_RESPUESTA_AJ not between", value1, value2, "respuestaAj");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table DESCRIPCIONES
     *
     * @mbggenerated do_not_delete_during_merge Wed Aug 24 13:51:43 CEST 2011
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table DESCRIPCIONES
     *
     * @mbggenerated Wed Aug 24 13:51:43 CEST 2011
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}